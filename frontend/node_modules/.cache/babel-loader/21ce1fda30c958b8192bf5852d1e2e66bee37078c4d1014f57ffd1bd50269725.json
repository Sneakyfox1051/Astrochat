{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\astro-main\\\\frontend\\\\src\\\\components\\\\ExpandableChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpandableChat.css';\nimport astroBotAPI from '../services/api';\nimport KundliChart from './KundliChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpandableChat = ({\n  isOpen,\n  onClose,\n  onRefresh\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n    sender: 'pandit',\n    timestamp: new Date().toLocaleTimeString()\n  }, {\n    id: 2,\n    text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n    sender: 'pandit',\n    timestamp: new Date().toLocaleTimeString()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    dob: '',\n    tob: '',\n    place: '',\n    timezone: 'Asia/Kolkata'\n  });\n  const [kundliData, setKundliData] = useState(null);\n  const [chartData, setChartData] = useState(null);\n  const [isGeneratingKundli, setIsGeneratingKundli] = useState(false);\n  const [isGeneratingChart, setIsGeneratingChart] = useState(false);\n  const [currentStep, setCurrentStep] = useState('greeting'); // greeting, collecting_details, chart_generated, chatting\n\n  // Handle refresh - clear messages and reset to initial state\n  React.useEffect(() => {\n    if (onRefresh) {\n      const resetMessages = () => {\n        setMessages([{\n          id: 1,\n          text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        }, {\n          id: 2,\n          text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        }]);\n        setInputText('');\n        setUserProfile({\n          name: '',\n          dob: '',\n          tob: '',\n          place: '',\n          timezone: 'Asia/Kolkata'\n        });\n        setKundliData(null);\n        setCurrentStep('greeting');\n      };\n\n      // Listen for refresh events\n      const handleRefresh = () => {\n        resetMessages();\n      };\n\n      // Store the handler so we can clean it up\n      window.addEventListener('refreshChat', handleRefresh);\n      return () => {\n        window.removeEventListener('refreshChat', handleRefresh);\n      };\n    }\n  }, [onRefresh]);\n\n  // Helper function to extract birth details from user input\n  const extractBirthDetails = text => {\n    const details = {};\n\n    // Extract name (if not already set)\n    if (!userProfile.name) {\n      const nameMatch = text.match(/(?:m[ae]ra naam|my name is|i am|main|mera naam)\\s+([a-zA-Z\\s]+)/i);\n      if (nameMatch) {\n        details.name = nameMatch[1].trim();\n      }\n    }\n\n    // Extract date of birth - supports multiple formats\n    // Format 1: DD/MM/YYYY or DD-MM-YYYY\n    let dobMatch = text.match(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/);\n    if (dobMatch) {\n      const [, day, month, year] = dobMatch;\n      details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    } else {\n      // Format 2: MM/DD/YYYY or MM-DD-YYYY (American format)\n      dobMatch = text.match(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/);\n      if (dobMatch) {\n        const [, month, day, year] = dobMatch;\n        details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n      } else {\n        // Format 3: YYYY/MM/DD or YYYY-MM-DD\n        dobMatch = text.match(/(\\d{4})[\\/\\-](\\d{1,2})[\\/\\-](\\d{1,2})/);\n        if (dobMatch) {\n          const [, year, month, day] = dobMatch;\n          details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n        } else {\n          // Format 4: DD Month YYYY (e.g., \"15 May 1990\")\n          const monthNames = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\n          const monthNamesShort = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n          const monthMatch = text.match(/(\\d{1,2})\\s+(january|february|march|april|may|june|july|august|september|october|november|december|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\s+(\\d{4})/i);\n          if (monthMatch) {\n            const [, day, monthName, year] = monthMatch;\n            const monthIndex = monthNames.indexOf(monthName.toLowerCase()) !== -1 ? monthNames.indexOf(monthName.toLowerCase()) + 1 : monthNamesShort.indexOf(monthName.toLowerCase()) + 1;\n            details.dob = `${year}-${monthIndex.toString().padStart(2, '0')}-${day.padStart(2, '0')}`;\n          }\n        }\n      }\n    }\n\n    // Extract time of birth - supports multiple formats\n    // Format 1: HH:MM or H:MM with AM/PM\n    let tobMatch = text.match(/(\\d{1,2}):(\\d{2})(?:\\s*(am|pm))?/i);\n    if (tobMatch) {\n      let [, hour, minute, period] = tobMatch;\n      hour = parseInt(hour);\n      if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n        hour += 12;\n      } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n        hour = 0;\n      }\n      details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n    } else {\n      // Format 2: HH.MM or H.MM (dot separator)\n      tobMatch = text.match(/(\\d{1,2})\\.(\\d{2})(?:\\s*(am|pm))?/i);\n      if (tobMatch) {\n        let [, hour, minute, period] = tobMatch;\n        hour = parseInt(hour);\n        if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n          hour += 12;\n        } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n          hour = 0;\n        }\n        details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n      } else {\n        // Format 3: HH MM or H MM (space separator)\n        tobMatch = text.match(/(\\d{1,2})\\s+(\\d{2})(?:\\s*(am|pm))?/i);\n        if (tobMatch) {\n          let [, hour, minute, period] = tobMatch;\n          hour = parseInt(hour);\n          if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n            hour += 12;\n          } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n            hour = 0;\n          }\n          details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n        }\n      }\n    }\n\n    // Extract place\n    const placeMatch = text.match(/(?:place|sthan|city|town|birth place|janm sthan)\\s*:?\\s*([a-zA-Z\\s,]+)/i);\n    if (placeMatch) {\n      details.place = placeMatch[1].trim();\n    }\n    return details;\n  };\n\n  // Helper function to check if all birth details are collected\n  const isProfileComplete = () => {\n    return userProfile.name && userProfile.dob && userProfile.tob && userProfile.place;\n  };\n\n  // Helper function to generate Kundli\n  const generateKundli = async () => {\n    setIsGeneratingKundli(true);\n    try {\n      const response = await astroBotAPI.generateKundli({\n        name: userProfile.name,\n        dob: userProfile.dob,\n        tob: userProfile.tob,\n        place: userProfile.place,\n        timezone: userProfile.timezone\n      });\n      if (response.success) {\n        setKundliData(response.chart_data);\n        setCurrentStep('kundli_generated');\n\n        // Add Kundli generation success message\n        const successMessage = {\n          id: messages.length + 2,\n          text: `🎉 ${userProfile.name} ji, aapka Kundli successfully generate ho gaya hai! Main ab aapke liye detailed analysis kar sakta hun. Aap kya jaanna chahte hain?`,\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, successMessage]);\n      } else {\n        throw new Error(response.error || 'Kundli generation failed');\n      }\n    } catch (error) {\n      console.error('Error generating Kundli:', error);\n      const errorMessage = {\n        id: messages.length + 2,\n        text: \"Sorry, Kundli generate karne mein koi problem aa rahi hai. Kripya dobara try karein ya contact karein.\",\n        sender: 'pandit',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsGeneratingKundli(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (inputText.trim()) {\n      const newMessage = {\n        id: messages.length + 1,\n        text: inputText,\n        sender: 'user',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages([...messages, newMessage]);\n      const currentInput = inputText;\n      setInputText('');\n      try {\n        // Show typing indicator\n        const typingMessage = {\n          id: messages.length + 2,\n          text: \"Pandit ji typing...\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString(),\n          isTyping: true\n        };\n        setMessages(prev => [...prev, typingMessage]);\n\n        // Extract birth details from user input\n        const extractedDetails = extractBirthDetails(currentInput);\n        const updatedProfile = {\n          ...userProfile,\n          ...extractedDetails\n        };\n        setUserProfile(updatedProfile);\n        let response;\n        if (currentStep === 'greeting' || currentStep === 'collecting_details') {\n          // Check if we have all required details\n          if (isProfileComplete()) {\n            // Generate Kundli\n            await generateKundli();\n            return; // generateKundli handles the response\n          } else {\n            // Ask for missing details\n            const missingDetails = [];\n            if (!updatedProfile.name) missingDetails.push('naam');\n            if (!updatedProfile.dob) missingDetails.push('janm tithi (DD/MM/YYYY)');\n            if (!updatedProfile.tob) missingDetails.push('janm samay (HH:MM)');\n            if (!updatedProfile.place) missingDetails.push('janm sthan');\n            response = {\n              response: `Aapka naam ${updatedProfile.name || 'batayiye'}, janm tithi ${updatedProfile.dob || 'batayiye'}, janm samay ${updatedProfile.tob || 'batayiye'}, aur janm sthan ${updatedProfile.place || 'batayiye'}. In sab details ke saath main aapka Kundli banakar detailed analysis kar sakta hun.`\n            };\n            setCurrentStep('collecting_details');\n          }\n        } else {\n          // Regular chat with Kundli context\n          response = await astroBotAPI.sendChatMessage(currentInput, kundliData);\n        }\n\n        // Remove typing indicator and add actual response\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const panditResponse = {\n            id: messages.length + 2,\n            text: response.response,\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, panditResponse];\n        });\n      } catch (error) {\n        console.error('Error sending message:', error);\n\n        // Remove typing indicator and show error\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const errorResponse = {\n            id: messages.length + 2,\n            text: \"Sorry, main abhi online nahi hun. Kripya thoda baad try karein.\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, errorResponse];\n        });\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `expandable-chat-container ${isOpen ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pandit-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pandit-avatar-small\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../assets/Astro_Avatar.png'),\n            alt: \"Pandit ji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pandit-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pandit ji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status\",\n            children: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [message.sender === 'pandit' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../assets/Astro_Avatar.png'),\n            alt: \"Pandit ji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 11\n      }, this)), kundliData && /*#__PURE__*/_jsxDEV(KundliChart, {\n        chartData: kundliData,\n        onChartReady: () => {\n          // Add a message when chart is ready\n          const chartReadyMessage = {\n            id: Date.now(),\n            text: \"🎉 Aapka Kundli chart taiyar hai! Ab aap koi bhi sawal puch sakte hain - grah ki sthiti, dasha, yog, ya koi bhi astrological prediction ke bare mein.\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          setMessages(prev => [...prev, chartReadyMessage]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), isGeneratingKundli && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"kundli-loading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uD83D\\uDD2E Aapka Kundli generate ho raha hai... Kripya wait karein\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: currentStep === 'greeting' || currentStep === 'collecting_details' ? \"Format: naam, DD/MM/YYYY, HH:MM, place (e.g., Rajesh, 15/05/1990, 14:30, Delhi)\" : \"Apna sawal yahan likhein...\",\n          className: \"message-input\",\n          disabled: isGeneratingKundli\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          disabled: isGeneratingKundli,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            className: \"send-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L11 13\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L15 22L11 13L2 9L22 2Z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 318,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpandableChat, \"3DxbDUQys9GHT5Ktrw+AD/G2YjU=\");\n_c = ExpandableChat;\nexport default ExpandableChat;\nvar _c;\n$RefreshReg$(_c, \"ExpandableChat\");","map":{"version":3,"names":["React","useState","astroBotAPI","KundliChart","jsxDEV","_jsxDEV","ExpandableChat","isOpen","onClose","onRefresh","_s","messages","setMessages","id","text","sender","timestamp","Date","toLocaleTimeString","inputText","setInputText","userProfile","setUserProfile","name","dob","tob","place","timezone","kundliData","setKundliData","chartData","setChartData","isGeneratingKundli","setIsGeneratingKundli","isGeneratingChart","setIsGeneratingChart","currentStep","setCurrentStep","useEffect","resetMessages","handleRefresh","window","addEventListener","removeEventListener","extractBirthDetails","details","nameMatch","match","trim","dobMatch","day","month","year","padStart","monthNames","monthNamesShort","monthMatch","monthName","monthIndex","indexOf","toLowerCase","toString","tobMatch","hour","minute","period","parseInt","placeMatch","isProfileComplete","generateKundli","response","success","chart_data","successMessage","length","prev","Error","error","console","errorMessage","handleSendMessage","newMessage","currentInput","typingMessage","isTyping","extractedDetails","updatedProfile","missingDetails","push","sendChatMessage","withoutTyping","filter","msg","panditResponse","errorResponse","handleKeyPress","e","key","className","children","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","message","onChartReady","chartReadyMessage","now","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","viewBox","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["D:/Downloads/astro-main/frontend/src/components/ExpandableChat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ExpandableChat.css';\nimport astroBotAPI from '../services/api';\nimport KundliChart from './KundliChart';\n\nconst ExpandableChat = ({ isOpen, onClose, onRefresh }) => {\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n      sender: 'pandit',\n      timestamp: new Date().toLocaleTimeString()\n    },\n    {\n      id: 2,\n      text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n      sender: 'pandit',\n      timestamp: new Date().toLocaleTimeString()\n    }\n  ]);\n  const [inputText, setInputText] = useState('');\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    dob: '',\n    tob: '',\n    place: '',\n    timezone: 'Asia/Kolkata'\n  });\n  const [kundliData, setKundliData] = useState(null);\n  const [chartData, setChartData] = useState(null);\n  const [isGeneratingKundli, setIsGeneratingKundli] = useState(false);\n  const [isGeneratingChart, setIsGeneratingChart] = useState(false);\n  const [currentStep, setCurrentStep] = useState('greeting'); // greeting, collecting_details, chart_generated, chatting\n\n  // Handle refresh - clear messages and reset to initial state\n  React.useEffect(() => {\n    if (onRefresh) {\n      const resetMessages = () => {\n        setMessages([\n          {\n            id: 1,\n            text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          },\n          {\n            id: 2,\n            text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          }\n        ]);\n        setInputText('');\n        setUserProfile({\n          name: '',\n          dob: '',\n          tob: '',\n          place: '',\n          timezone: 'Asia/Kolkata'\n        });\n        setKundliData(null);\n        setCurrentStep('greeting');\n      };\n      \n      // Listen for refresh events\n      const handleRefresh = () => {\n        resetMessages();\n      };\n      \n      // Store the handler so we can clean it up\n      window.addEventListener('refreshChat', handleRefresh);\n      \n      return () => {\n        window.removeEventListener('refreshChat', handleRefresh);\n      };\n    }\n  }, [onRefresh]);\n\n  // Helper function to extract birth details from user input\n  const extractBirthDetails = (text) => {\n    const details = {};\n    \n    // Extract name (if not already set)\n    if (!userProfile.name) {\n      const nameMatch = text.match(/(?:m[ae]ra naam|my name is|i am|main|mera naam)\\s+([a-zA-Z\\s]+)/i);\n      if (nameMatch) {\n        details.name = nameMatch[1].trim();\n      }\n    }\n    \n    // Extract date of birth - supports multiple formats\n    // Format 1: DD/MM/YYYY or DD-MM-YYYY\n    let dobMatch = text.match(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/);\n    if (dobMatch) {\n      const [, day, month, year] = dobMatch;\n      details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    } else {\n      // Format 2: MM/DD/YYYY or MM-DD-YYYY (American format)\n      dobMatch = text.match(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/);\n      if (dobMatch) {\n        const [, month, day, year] = dobMatch;\n        details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n      } else {\n        // Format 3: YYYY/MM/DD or YYYY-MM-DD\n        dobMatch = text.match(/(\\d{4})[\\/\\-](\\d{1,2})[\\/\\-](\\d{1,2})/);\n        if (dobMatch) {\n          const [, year, month, day] = dobMatch;\n          details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n        } else {\n          // Format 4: DD Month YYYY (e.g., \"15 May 1990\")\n          const monthNames = ['january', 'february', 'march', 'april', 'may', 'june',\n                             'july', 'august', 'september', 'october', 'november', 'december'];\n          const monthNamesShort = ['jan', 'feb', 'mar', 'apr', 'may', 'jun',\n                                  'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\n          \n          const monthMatch = text.match(/(\\d{1,2})\\s+(january|february|march|april|may|june|july|august|september|october|november|december|jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)\\s+(\\d{4})/i);\n          if (monthMatch) {\n            const [, day, monthName, year] = monthMatch;\n            const monthIndex = monthNames.indexOf(monthName.toLowerCase()) !== -1 \n              ? monthNames.indexOf(monthName.toLowerCase()) + 1\n              : monthNamesShort.indexOf(monthName.toLowerCase()) + 1;\n            details.dob = `${year}-${monthIndex.toString().padStart(2, '0')}-${day.padStart(2, '0')}`;\n          }\n        }\n      }\n    }\n    \n    // Extract time of birth - supports multiple formats\n    // Format 1: HH:MM or H:MM with AM/PM\n    let tobMatch = text.match(/(\\d{1,2}):(\\d{2})(?:\\s*(am|pm))?/i);\n    if (tobMatch) {\n      let [, hour, minute, period] = tobMatch;\n      hour = parseInt(hour);\n      if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n        hour += 12;\n      } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n        hour = 0;\n      }\n      details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n    } else {\n      // Format 2: HH.MM or H.MM (dot separator)\n      tobMatch = text.match(/(\\d{1,2})\\.(\\d{2})(?:\\s*(am|pm))?/i);\n      if (tobMatch) {\n        let [, hour, minute, period] = tobMatch;\n        hour = parseInt(hour);\n        if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n          hour += 12;\n        } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n          hour = 0;\n        }\n        details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n      } else {\n        // Format 3: HH MM or H MM (space separator)\n        tobMatch = text.match(/(\\d{1,2})\\s+(\\d{2})(?:\\s*(am|pm))?/i);\n        if (tobMatch) {\n          let [, hour, minute, period] = tobMatch;\n          hour = parseInt(hour);\n          if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n            hour += 12;\n          } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n            hour = 0;\n          }\n          details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n        }\n      }\n    }\n    \n    // Extract place\n    const placeMatch = text.match(/(?:place|sthan|city|town|birth place|janm sthan)\\s*:?\\s*([a-zA-Z\\s,]+)/i);\n    if (placeMatch) {\n      details.place = placeMatch[1].trim();\n    }\n    \n    return details;\n  };\n\n  // Helper function to check if all birth details are collected\n  const isProfileComplete = () => {\n    return userProfile.name && userProfile.dob && userProfile.tob && userProfile.place;\n  };\n\n  // Helper function to generate Kundli\n  const generateKundli = async () => {\n    setIsGeneratingKundli(true);\n    \n    try {\n      const response = await astroBotAPI.generateKundli({\n        name: userProfile.name,\n        dob: userProfile.dob,\n        tob: userProfile.tob,\n        place: userProfile.place,\n        timezone: userProfile.timezone\n      });\n      \n      if (response.success) {\n        setKundliData(response.chart_data);\n        setCurrentStep('kundli_generated');\n        \n        // Add Kundli generation success message\n        const successMessage = {\n          id: messages.length + 2,\n          text: `🎉 ${userProfile.name} ji, aapka Kundli successfully generate ho gaya hai! Main ab aapke liye detailed analysis kar sakta hun. Aap kya jaanna chahte hain?`,\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, successMessage]);\n      } else {\n        throw new Error(response.error || 'Kundli generation failed');\n      }\n    } catch (error) {\n      console.error('Error generating Kundli:', error);\n      const errorMessage = {\n        id: messages.length + 2,\n        text: \"Sorry, Kundli generate karne mein koi problem aa rahi hai. Kripya dobara try karein ya contact karein.\",\n        sender: 'pandit',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsGeneratingKundli(false);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (inputText.trim()) {\n      const newMessage = {\n        id: messages.length + 1,\n        text: inputText,\n        sender: 'user',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      \n      setMessages([...messages, newMessage]);\n      const currentInput = inputText;\n      setInputText('');\n      \n      try {\n        // Show typing indicator\n        const typingMessage = {\n          id: messages.length + 2,\n          text: \"Pandit ji typing...\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString(),\n          isTyping: true\n        };\n        setMessages(prev => [...prev, typingMessage]);\n        \n        // Extract birth details from user input\n        const extractedDetails = extractBirthDetails(currentInput);\n        const updatedProfile = { ...userProfile, ...extractedDetails };\n        setUserProfile(updatedProfile);\n        \n        let response;\n        \n        if (currentStep === 'greeting' || currentStep === 'collecting_details') {\n          // Check if we have all required details\n          if (isProfileComplete()) {\n            // Generate Kundli\n            await generateKundli();\n            return; // generateKundli handles the response\n          } else {\n            // Ask for missing details\n            const missingDetails = [];\n            if (!updatedProfile.name) missingDetails.push('naam');\n            if (!updatedProfile.dob) missingDetails.push('janm tithi (DD/MM/YYYY)');\n            if (!updatedProfile.tob) missingDetails.push('janm samay (HH:MM)');\n            if (!updatedProfile.place) missingDetails.push('janm sthan');\n            \n            response = {\n              response: `Aapka naam ${updatedProfile.name || 'batayiye'}, janm tithi ${updatedProfile.dob || 'batayiye'}, janm samay ${updatedProfile.tob || 'batayiye'}, aur janm sthan ${updatedProfile.place || 'batayiye'}. In sab details ke saath main aapka Kundli banakar detailed analysis kar sakta hun.`\n            };\n            setCurrentStep('collecting_details');\n          }\n        } else {\n          // Regular chat with Kundli context\n          response = await astroBotAPI.sendChatMessage(currentInput, kundliData);\n        }\n        \n        // Remove typing indicator and add actual response\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const panditResponse = {\n            id: messages.length + 2,\n            text: response.response,\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, panditResponse];\n        });\n        \n      } catch (error) {\n        console.error('Error sending message:', error);\n        \n        // Remove typing indicator and show error\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const errorResponse = {\n            id: messages.length + 2,\n            text: \"Sorry, main abhi online nahi hun. Kripya thoda baad try karein.\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, errorResponse];\n        });\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className={`expandable-chat-container ${isOpen ? 'expanded' : ''}`}>\n      {/* Chat Header */}\n      <div className=\"chat-header\">\n        <div className=\"pandit-info\">\n          <div className=\"pandit-avatar-small\">\n            <img src={require('../assets/Astro_Avatar.png')} alt=\"Pandit ji\" />\n          </div>\n          <div className=\"pandit-details\">\n            <h3>Pandit ji</h3>\n            <span className=\"status\">Online</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages Area */}\n      <div className=\"messages-container\">\n        {messages.map((message) => (\n          <div key={message.id} className={`message ${message.sender}`}>\n            {message.sender === 'pandit' && (\n              <div className=\"message-avatar\">\n                <img src={require('../assets/Astro_Avatar.png')} alt=\"Pandit ji\" />\n              </div>\n            )}\n            <div className=\"message-content\">\n              <div className=\"message-bubble\">\n                <p>{message.text}</p>\n                <span className=\"message-time\">{message.timestamp}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n        \n        {/* Kundli Chart Display */}\n        {kundliData && (\n          <KundliChart \n            chartData={kundliData} \n            onChartReady={() => {\n              // Add a message when chart is ready\n              const chartReadyMessage = {\n                id: Date.now(),\n                text: \"🎉 Aapka Kundli chart taiyar hai! Ab aap koi bhi sawal puch sakte hain - grah ki sthiti, dasha, yog, ya koi bhi astrological prediction ke bare mein.\",\n                sender: 'pandit',\n                timestamp: new Date().toLocaleTimeString()\n              };\n              setMessages(prev => [...prev, chartReadyMessage]);\n            }}\n          />\n        )}\n        \n        {/* Loading indicator for Kundli generation */}\n        {isGeneratingKundli && (\n          <div className=\"kundli-loading\">\n            <div className=\"loading-spinner\"></div>\n            <p>🔮 Aapka Kundli generate ho raha hai... Kripya wait karein</p>\n          </div>\n        )}\n      </div>\n\n      {/* Input Area */}\n      <div className=\"input-container\">\n        <div className=\"input-wrapper\">\n          <input\n            type=\"text\"\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder={\n              currentStep === 'greeting' || currentStep === 'collecting_details'\n                ? \"Format: naam, DD/MM/YYYY, HH:MM, place (e.g., Rajesh, 15/05/1990, 14:30, Delhi)\"\n                : \"Apna sawal yahan likhein...\"\n            }\n            className=\"message-input\"\n            disabled={isGeneratingKundli}\n          />\n          <button \n            onClick={handleSendMessage} \n            className=\"send-button\"\n            disabled={isGeneratingKundli}\n          >\n            <svg viewBox=\"0 0 24 24\" className=\"send-icon\">\n              <path d=\"M22 2L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpandableChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}