{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\astro-main\\\\frontend\\\\src\\\\components\\\\AstroBotUI.js\",\n  _s = $RefreshSig$();\n/**\n * AstroBotUI - Main Application Component\n * \n * This is the root component of the AstroRemedis frontend application.\n * It orchestrates all other components and manages the overall application state.\n * \n * Key Responsibilities:\n * - Chat state management (open/closed)\n * - Form modal state management\n * - User data flow between components\n * - Component communication and event handling\n * - Background layer with animated effects\n * - Responsive layout for desktop and mobile\n * \n * Component Hierarchy:\n * - AstroBotUI (this component)\n *   ├── Character (3D character display)\n *   ├── ChatBubble (initial chat prompt)\n *   ├── BottomNavigation (chat controls)\n *   ├── ExpandableChat (main chat interface)\n *   └── UserDataForm (birth details modal)\n * \n * State Management:\n * - isChatOpen: Controls chat window visibility\n * - isFormOpen: Controls form modal visibility\n * - userData: Stores user birth details from form\n * \n * @component\n * @returns {JSX.Element} The main application interface\n * \n * @author AstroRemedis Development Team\n * @version 2.0.0\n * @since 2024\n */\n\nimport React, { useState } from 'react';\nimport ChatBubble from './ChatBubble';\nimport Character from './Character';\nimport BottomNavigation from './BottomNavigation';\nimport ExpandableChat from './ExpandableChat';\nimport UserDataForm from './UserDataForm';\nimport './AstroBotUI.css';\n// No video import; using procedural CSS background for better performance\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AstroBotUI = () => {\n  _s();\n  // ===== STATE MANAGEMENT =====\n  // Chat interface state - controls main chat window visibility\n  const [isChatOpen, setIsChatOpen] = useState(false);\n\n  // Form modal state - controls birth details form visibility\n  const [isFormOpen, setIsFormOpen] = useState(false);\n\n  // User data state - stores birth details from form submission\n  const [userData, setUserData] = useState(null);\n\n  // ===== EVENT HANDLERS =====\n\n  /**\n   * Handles toggling the chat interface between open and closed states.\n   * Called when user clicks the chat button in BottomNavigation.\n   */\n  const handleChatToggle = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n\n  /**\n   * Handles closing the chat interface.\n   * Called when user clicks the close button in ExpandableChat.\n   */\n  const handleCloseChat = () => {\n    setIsChatOpen(false);\n  };\n\n  /**\n   * Handles refreshing the chat by clearing messages and resetting state.\n   * Uses custom event dispatch to communicate with ExpandableChat component.\n   * Also resets user data to show form again.\n   */\n  const handleRefreshChat = () => {\n    // Trigger refresh event for ExpandableChat\n    window.dispatchEvent(new CustomEvent('refreshChat'));\n    // Reset user data to show form again\n    setUserData(null);\n    console.log('Refreshing chat - clearing messages');\n  };\n\n  /**\n   * Handles showing the user data form popup.\n   * Called when user clicks \"New Chat\" or similar action.\n   */\n  const handleShowForm = () => {\n    setIsFormOpen(true);\n  };\n\n  /**\n   * Handles closing the user data form popup.\n   * Called when user clicks cancel or backdrop.\n   */\n  const handleCloseForm = () => {\n    setIsFormOpen(false);\n  };\n\n  /**\n   * Handles form submission with user birth data.\n   * Stores user data and transitions to chat interface.\n   * \n   * @param {Object} data - User birth details from form\n   * @param {string} data.name - User's full name\n   * @param {string} data.dob - Date of birth (YYYY-MM-DD)\n   * @param {string} data.tob - Time of birth (HH:MM:SS)\n   * @param {string} data.place - Birth place/city\n   * @param {string} data.timezone - Timezone (default: Asia/Kolkata)\n   */\n  const handleFormSubmit = async data => {\n    try {\n      setUserData(data); // Store user data for chat\n      setIsFormOpen(false); // Close form modal\n      setIsChatOpen(true); // Open chat interface\n      console.log('Form submitted with data:', data);\n    } catch (error) {\n      console.error('Error handling form submission:', error);\n      throw error;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"astrobot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-layer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Astro_LOGO.png\",\n        alt: \"AstroBot Logo\",\n        className: \"header-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"central-section\",\n      children: [!isChatOpen && /*#__PURE__*/_jsxDEV(Character, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }, this), !isChatOpen && /*#__PURE__*/_jsxDEV(ChatBubble, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomNavigation, {\n      onChatToggle: handleChatToggle,\n      isChatOpen: isChatOpen,\n      onRefreshChat: handleRefreshChat,\n      onShowForm: handleShowForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExpandableChat, {\n      isOpen: isChatOpen,\n      onClose: handleCloseChat,\n      onRefresh: handleRefreshChat,\n      userData: userData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserDataForm, {\n      isOpen: isFormOpen,\n      onClose: handleCloseForm,\n      onSubmit: handleFormSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(AstroBotUI, \"2cCv9UFxshEd9cly2K6CZxaSGZo=\");\n_c = AstroBotUI;\nexport default AstroBotUI;\nvar _c;\n$RefreshReg$(_c, \"AstroBotUI\");","map":{"version":3,"names":["React","useState","ChatBubble","Character","BottomNavigation","ExpandableChat","UserDataForm","jsxDEV","_jsxDEV","AstroBotUI","_s","isChatOpen","setIsChatOpen","isFormOpen","setIsFormOpen","userData","setUserData","handleChatToggle","handleCloseChat","handleRefreshChat","window","dispatchEvent","CustomEvent","console","log","handleShowForm","handleCloseForm","handleFormSubmit","data","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onChatToggle","onRefreshChat","onShowForm","isOpen","onClose","onRefresh","onSubmit","_c","$RefreshReg$"],"sources":["D:/Downloads/astro-main/frontend/src/components/AstroBotUI.js"],"sourcesContent":["/**\n * AstroBotUI - Main Application Component\n * \n * This is the root component of the AstroRemedis frontend application.\n * It orchestrates all other components and manages the overall application state.\n * \n * Key Responsibilities:\n * - Chat state management (open/closed)\n * - Form modal state management\n * - User data flow between components\n * - Component communication and event handling\n * - Background layer with animated effects\n * - Responsive layout for desktop and mobile\n * \n * Component Hierarchy:\n * - AstroBotUI (this component)\n *   ├── Character (3D character display)\n *   ├── ChatBubble (initial chat prompt)\n *   ├── BottomNavigation (chat controls)\n *   ├── ExpandableChat (main chat interface)\n *   └── UserDataForm (birth details modal)\n * \n * State Management:\n * - isChatOpen: Controls chat window visibility\n * - isFormOpen: Controls form modal visibility\n * - userData: Stores user birth details from form\n * \n * @component\n * @returns {JSX.Element} The main application interface\n * \n * @author AstroRemedis Development Team\n * @version 2.0.0\n * @since 2024\n */\n\nimport React, { useState } from 'react';\nimport ChatBubble from './ChatBubble';\nimport Character from './Character';\nimport BottomNavigation from './BottomNavigation';\nimport ExpandableChat from './ExpandableChat';\nimport UserDataForm from './UserDataForm';\nimport './AstroBotUI.css';\n// No video import; using procedural CSS background for better performance\n\nconst AstroBotUI = () => {\n  // ===== STATE MANAGEMENT =====\n  // Chat interface state - controls main chat window visibility\n  const [isChatOpen, setIsChatOpen] = useState(false);\n  \n  // Form modal state - controls birth details form visibility\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  \n  // User data state - stores birth details from form submission\n  const [userData, setUserData] = useState(null);\n\n  // ===== EVENT HANDLERS =====\n  \n  /**\n   * Handles toggling the chat interface between open and closed states.\n   * Called when user clicks the chat button in BottomNavigation.\n   */\n  const handleChatToggle = () => {\n    setIsChatOpen(!isChatOpen);\n  };\n\n  /**\n   * Handles closing the chat interface.\n   * Called when user clicks the close button in ExpandableChat.\n   */\n  const handleCloseChat = () => {\n    setIsChatOpen(false);\n  };\n\n  /**\n   * Handles refreshing the chat by clearing messages and resetting state.\n   * Uses custom event dispatch to communicate with ExpandableChat component.\n   * Also resets user data to show form again.\n   */\n  const handleRefreshChat = () => {\n    // Trigger refresh event for ExpandableChat\n    window.dispatchEvent(new CustomEvent('refreshChat'));\n    // Reset user data to show form again\n    setUserData(null);\n    console.log('Refreshing chat - clearing messages');\n  };\n\n  /**\n   * Handles showing the user data form popup.\n   * Called when user clicks \"New Chat\" or similar action.\n   */\n  const handleShowForm = () => {\n    setIsFormOpen(true);\n  };\n\n  /**\n   * Handles closing the user data form popup.\n   * Called when user clicks cancel or backdrop.\n   */\n  const handleCloseForm = () => {\n    setIsFormOpen(false);\n  };\n\n  /**\n   * Handles form submission with user birth data.\n   * Stores user data and transitions to chat interface.\n   * \n   * @param {Object} data - User birth details from form\n   * @param {string} data.name - User's full name\n   * @param {string} data.dob - Date of birth (YYYY-MM-DD)\n   * @param {string} data.tob - Time of birth (HH:MM:SS)\n   * @param {string} data.place - Birth place/city\n   * @param {string} data.timezone - Timezone (default: Asia/Kolkata)\n   */\n  const handleFormSubmit = async (data) => {\n    try {\n      setUserData(data);        // Store user data for chat\n      setIsFormOpen(false);     // Close form modal\n      setIsChatOpen(true);      // Open chat interface\n      console.log('Form submitted with data:', data);\n    } catch (error) {\n      console.error('Error handling form submission:', error);\n      throw error;\n    }\n  };\n\n  return (\n    <div className=\"astrobot-container\">\n      {/* Background layer with animated effects for visual appeal */}\n      <div className=\"background-layer\" />\n\n      {/* Top header with application logo */}\n      <div className=\"top-header\">\n        <img src=\"/Astro_LOGO.png\" alt=\"AstroBot Logo\" className=\"header-logo\" />\n      </div>\n\n      {/* Central section containing character and chat bubble when chat is closed */}\n      <div className=\"central-section\">\n        {!isChatOpen && <Character />}\n        {!isChatOpen && <ChatBubble />}\n      </div>\n\n      {/* Bottom navigation with chat controls */}\n      <BottomNavigation \n        onChatToggle={handleChatToggle} \n        isChatOpen={isChatOpen} \n        onRefreshChat={handleRefreshChat}\n        onShowForm={handleShowForm}\n      />\n\n      {/* Expandable chat window - shown when chat is open */}\n      <ExpandableChat \n        isOpen={isChatOpen} \n        onClose={handleCloseChat} \n        onRefresh={handleRefreshChat}\n        userData={userData}\n      />\n\n      {/* User Data Form Modal */}\n      <UserDataForm\n        isOpen={isFormOpen}\n        onClose={handleCloseForm}\n        onSubmit={handleFormSubmit}\n      />\n    </div>\n  );\n};\n\nexport default AstroBotUI;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}