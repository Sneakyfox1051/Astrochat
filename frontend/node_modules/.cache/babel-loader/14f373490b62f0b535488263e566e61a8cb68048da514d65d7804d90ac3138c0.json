{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\astro-main (2)\\\\astro-main\\\\src\\\\components\\\\AstroBotUI.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo } from 'react';\nimport ChatBubble from './ChatBubble';\nimport Character from './Character';\nimport BottomNavigation from './BottomNavigation';\nimport './AstroBotUI.css';\n// No video import; using procedural CSS background\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AstroBotUI = () => {\n  _s();\n  useEffect(() => {}, []);\n\n  // Zodiac symbols layer - random positions and sizes\n  const zodiacNodes = useMemo(() => {\n    const symbols = ['\\\\u2648',\n    // Aries\n    '\\\\u2649',\n    // Taurus\n    '\\\\u264A',\n    // Gemini\n    '\\\\u264B',\n    // Cancer\n    '\\\\u264C',\n    // Leo\n    '\\\\u264D',\n    // Virgo\n    '\\\\u264E',\n    // Libra\n    '\\\\u264F',\n    // Scorpio\n    '\\\\u2650',\n    // Sagittarius\n    '\\\\u2651',\n    // Capricorn\n    '\\\\u2652',\n    // Aquarius\n    '\\\\u2653',\n    // Pisces\n    '\\\\u26CE' // Ophiuchus\n    ];\n    const nodes = [];\n    const total = 28; // total glyphs to render\n    for (let i = 0; i < total; i += 1) {\n      const s = symbols[Math.floor(Math.random() * symbols.length)];\n      const top = Math.random() * 100; // vh\n      const left = Math.random() * 100; // vw\n      const size = 18 + Math.random() * 28; // px\n      const rotate = Math.floor(Math.random() * 360);\n      const delay = (Math.random() * 8).toFixed(2) + 's';\n      const duration = 14 + Math.random() * 18; // seconds\n      nodes.push(/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"zodiac-symbol\",\n        style: {\n          top: `${top}%`,\n          left: `${left}%`,\n          fontSize: `${size}px`,\n          transform: `rotate(${rotate}deg)`,\n          animationDelay: delay,\n          animationDuration: `${duration}s`\n        },\n        children: s\n      }, `z-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this));\n    }\n    return nodes;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"astrobot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"background-layer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blob bg-blob-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blob bg-blob-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-blob bg-blob-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-zodiac\",\n        children: zodiacNodes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-stars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"background-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"top-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/Astro_LOGO.png\",\n        alt: \"AstroBot Logo\",\n        className: \"header-logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"central-section\",\n      children: [/*#__PURE__*/_jsxDEV(Character, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBubble, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomNavigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(AstroBotUI, \"whfIoXeGfx5By7TCx5DqpYxBXT4=\");\n_c = AstroBotUI;\nexport default AstroBotUI;\nvar _c;\n$RefreshReg$(_c, \"AstroBotUI\");","map":{"version":3,"names":["React","useEffect","useMemo","ChatBubble","Character","BottomNavigation","jsxDEV","_jsxDEV","AstroBotUI","_s","zodiacNodes","symbols","nodes","total","i","s","Math","floor","random","length","top","left","size","rotate","delay","toFixed","duration","push","className","style","fontSize","transform","animationDelay","animationDuration","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["D:/Downloads/astro-main (2)/astro-main/src/components/AstroBotUI.js"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\r\nimport ChatBubble from './ChatBubble';\r\nimport Character from './Character';\r\nimport BottomNavigation from './BottomNavigation';\r\nimport './AstroBotUI.css';\r\n// No video import; using procedural CSS background\r\n\r\nconst AstroBotUI = () => {\r\n  useEffect(() => {}, []);\r\n\r\n  // Zodiac symbols layer - random positions and sizes\r\n  const zodiacNodes = useMemo(() => {\r\n    const symbols = [\r\n      '\\\\u2648', // Aries\r\n      '\\\\u2649', // Taurus\r\n      '\\\\u264A', // Gemini\r\n      '\\\\u264B', // Cancer\r\n      '\\\\u264C', // Leo\r\n      '\\\\u264D', // Virgo\r\n      '\\\\u264E', // Libra\r\n      '\\\\u264F', // Scorpio\r\n      '\\\\u2650', // Sagittarius\r\n      '\\\\u2651', // Capricorn\r\n      '\\\\u2652', // Aquarius\r\n      '\\\\u2653', // Pisces\r\n      '\\\\u26CE', // Ophiuchus\r\n    ];\r\n    const nodes = [];\r\n    const total = 28; // total glyphs to render\r\n    for (let i = 0; i < total; i += 1) {\r\n      const s = symbols[Math.floor(Math.random() * symbols.length)];\r\n      const top = Math.random() * 100; // vh\r\n      const left = Math.random() * 100; // vw\r\n      const size = 18 + Math.random() * 28; // px\r\n      const rotate = Math.floor(Math.random() * 360);\r\n      const delay = (Math.random() * 8).toFixed(2) + 's';\r\n      const duration = 14 + Math.random() * 18; // seconds\r\n      nodes.push(\r\n        <span\r\n          key={`z-${i}`}\r\n          className=\"zodiac-symbol\"\r\n          style={{\r\n            top: `${top}%`,\r\n            left: `${left}%`,\r\n            fontSize: `${size}px`,\r\n            transform: `rotate(${rotate}deg)`,\r\n            animationDelay: delay,\r\n            animationDuration: `${duration}s`,\r\n          }}\r\n        >\r\n          {s}\r\n        </span>\r\n      );\r\n    }\r\n    return nodes;\r\n  }, []);\r\n  return (\r\n    <div className=\"astrobot-container\">\r\n      {/* Procedural Background Layer */}\r\n      <div className=\"background-layer\">\r\n        <div className=\"bg-gradient\" />\r\n        <div className=\"bg-blob bg-blob-1\" />\r\n        <div className=\"bg-blob bg-blob-2\" />\r\n        <div className=\"bg-blob bg-blob-3\" />\r\n        <div className=\"bg-zodiac\">{zodiacNodes}</div>\r\n        <div className=\"bg-stars\" />\r\n        <div className=\"background-overlay\" />\r\n      </div>\r\n\r\n      {/* Black Header with Logo (top-left) */}\r\n      <div className=\"top-header\">\r\n        <img src=\"/Astro_LOGO.png\" alt=\"AstroBot Logo\" className=\"header-logo\" />\r\n      </div>\r\n\r\n      {/* Central Section with Character and Chat */}\r\n      <div className=\"central-section\">\r\n        <Character />\r\n        <ChatBubble />\r\n      </div>\r\n\r\n      {/* Bottom Navigation */}\r\n      <BottomNavigation />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AstroBotUI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}