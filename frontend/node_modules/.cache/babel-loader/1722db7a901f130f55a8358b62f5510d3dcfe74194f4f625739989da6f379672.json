{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\astro-main\\\\frontend\\\\src\\\\components\\\\ExpandableChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ExpandableChat.css';\nimport astroBotAPI from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpandableChat = ({\n  isOpen,\n  onClose,\n  onRefresh\n}) => {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n    sender: 'pandit',\n    timestamp: new Date().toLocaleTimeString()\n  }, {\n    id: 2,\n    text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n    sender: 'pandit',\n    timestamp: new Date().toLocaleTimeString()\n  }]);\n  const [inputText, setInputText] = useState('');\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    dob: '',\n    tob: '',\n    place: '',\n    timezone: 'Asia/Kolkata'\n  });\n  const [kundliData, setKundliData] = useState(null);\n  const [isGeneratingKundli, setIsGeneratingKundli] = useState(false);\n  const [currentStep, setCurrentStep] = useState('greeting'); // greeting, collecting_details, kundli_generated, chatting\n\n  // Handle refresh - clear messages and reset to initial state\n  React.useEffect(() => {\n    if (onRefresh) {\n      const resetMessages = () => {\n        setMessages([{\n          id: 1,\n          text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        }, {\n          id: 2,\n          text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        }]);\n        setInputText('');\n        setUserProfile({\n          name: '',\n          dob: '',\n          tob: '',\n          place: '',\n          timezone: 'Asia/Kolkata'\n        });\n        setKundliData(null);\n        setCurrentStep('greeting');\n      };\n\n      // Listen for refresh events\n      const handleRefresh = () => {\n        resetMessages();\n      };\n\n      // Store the handler so we can clean it up\n      window.addEventListener('refreshChat', handleRefresh);\n      return () => {\n        window.removeEventListener('refreshChat', handleRefresh);\n      };\n    }\n  }, [onRefresh]);\n\n  // Helper function to extract birth details from user input\n  const extractBirthDetails = text => {\n    const details = {};\n\n    // Extract name (if not already set)\n    if (!userProfile.name) {\n      const nameMatch = text.match(/(?:m[ae]ra naam|my name is|i am|main|mera naam)\\s+([a-zA-Z\\s]+)/i);\n      if (nameMatch) {\n        details.name = nameMatch[1].trim();\n      }\n    }\n\n    // Extract date of birth\n    const dobMatch = text.match(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/);\n    if (dobMatch) {\n      const [, day, month, year] = dobMatch;\n      details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    }\n\n    // Extract time of birth\n    const tobMatch = text.match(/(\\d{1,2}):(\\d{2})(?:\\s*(am|pm))?/i);\n    if (tobMatch) {\n      let [, hour, minute, period] = tobMatch;\n      hour = parseInt(hour);\n      if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n        hour += 12;\n      } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n        hour = 0;\n      }\n      details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n    }\n\n    // Extract place\n    const placeMatch = text.match(/(?:place|sthan|city|town|birth place|janm sthan)\\s*:?\\s*([a-zA-Z\\s,]+)/i);\n    if (placeMatch) {\n      details.place = placeMatch[1].trim();\n    }\n    return details;\n  };\n\n  // Helper function to check if all birth details are collected\n  const isProfileComplete = () => {\n    return userProfile.name && userProfile.dob && userProfile.tob && userProfile.place;\n  };\n\n  // Helper function to generate Kundli\n  const generateKundli = async () => {\n    setIsGeneratingKundli(true);\n    try {\n      const response = await astroBotAPI.generateKundli({\n        name: userProfile.name,\n        dob: userProfile.dob,\n        tob: userProfile.tob,\n        place: userProfile.place,\n        timezone: userProfile.timezone\n      });\n      if (response.success) {\n        setKundliData(response.chart_data);\n        setCurrentStep('kundli_generated');\n\n        // Add Kundli generation success message\n        const successMessage = {\n          id: messages.length + 2,\n          text: `🎉 ${userProfile.name} ji, aapka Kundli successfully generate ho gaya hai! Main ab aapke liye detailed analysis kar sakta hun. Aap kya jaanna chahte hain?`,\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, successMessage]);\n      } else {\n        throw new Error(response.error || 'Kundli generation failed');\n      }\n    } catch (error) {\n      console.error('Error generating Kundli:', error);\n      const errorMessage = {\n        id: messages.length + 2,\n        text: \"Sorry, Kundli generate karne mein koi problem aa rahi hai. Kripya dobara try karein ya contact karein.\",\n        sender: 'pandit',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsGeneratingKundli(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (inputText.trim()) {\n      const newMessage = {\n        id: messages.length + 1,\n        text: inputText,\n        sender: 'user',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages([...messages, newMessage]);\n      const currentInput = inputText;\n      setInputText('');\n      try {\n        // Show typing indicator\n        const typingMessage = {\n          id: messages.length + 2,\n          text: \"Pandit ji typing...\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString(),\n          isTyping: true\n        };\n        setMessages(prev => [...prev, typingMessage]);\n\n        // Extract birth details from user input\n        const extractedDetails = extractBirthDetails(currentInput);\n        const updatedProfile = {\n          ...userProfile,\n          ...extractedDetails\n        };\n        setUserProfile(updatedProfile);\n        let response;\n        if (currentStep === 'greeting' || currentStep === 'collecting_details') {\n          // Check if we have all required details\n          if (isProfileComplete()) {\n            // Generate Kundli\n            await generateKundli();\n            return; // generateKundli handles the response\n          } else {\n            // Ask for missing details\n            const missingDetails = [];\n            if (!updatedProfile.name) missingDetails.push('naam');\n            if (!updatedProfile.dob) missingDetails.push('janm tithi (DD/MM/YYYY)');\n            if (!updatedProfile.tob) missingDetails.push('janm samay (HH:MM)');\n            if (!updatedProfile.place) missingDetails.push('janm sthan');\n            response = {\n              response: `Aapka naam ${updatedProfile.name || 'batayiye'}, janm tithi ${updatedProfile.dob || 'batayiye'}, janm samay ${updatedProfile.tob || 'batayiye'}, aur janm sthan ${updatedProfile.place || 'batayiye'}. In sab details ke saath main aapka Kundli banakar detailed analysis kar sakta hun.`\n            };\n            setCurrentStep('collecting_details');\n          }\n        } else {\n          // Regular chat with Kundli context\n          response = await astroBotAPI.sendChatMessage(currentInput, kundliData);\n        }\n\n        // Remove typing indicator and add actual response\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const panditResponse = {\n            id: messages.length + 2,\n            text: response.response,\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, panditResponse];\n        });\n      } catch (error) {\n        console.error('Error sending message:', error);\n\n        // Remove typing indicator and show error\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const errorResponse = {\n            id: messages.length + 2,\n            text: \"Sorry, main abhi online nahi hun. Kripya thoda baad try karein.\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, errorResponse];\n        });\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n  if (!isOpen) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `expandable-chat-container ${isOpen ? 'expanded' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pandit-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pandit-avatar-small\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../assets/Astro_Avatar.png'),\n            alt: \"Pandit ji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pandit-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pandit ji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"status\",\n            children: \"Online\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [message.sender === 'pandit' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require('../assets/Astro_Avatar.png'),\n            alt: \"Pandit ji\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: message.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.timestamp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Apna sawal yahan likhein...\",\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            viewBox: \"0 0 24 24\",\n            className: \"send-icon\",\n            children: [/*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L11 13\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M22 2L15 22L11 13L2 9L22 2Z\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpandableChat, \"u4GFngQP4A0pmFop+G0uJ7FEx/I=\");\n_c = ExpandableChat;\nexport default ExpandableChat;\nvar _c;\n$RefreshReg$(_c, \"ExpandableChat\");","map":{"version":3,"names":["React","useState","astroBotAPI","jsxDEV","_jsxDEV","ExpandableChat","isOpen","onClose","onRefresh","_s","messages","setMessages","id","text","sender","timestamp","Date","toLocaleTimeString","inputText","setInputText","userProfile","setUserProfile","name","dob","tob","place","timezone","kundliData","setKundliData","isGeneratingKundli","setIsGeneratingKundli","currentStep","setCurrentStep","useEffect","resetMessages","handleRefresh","window","addEventListener","removeEventListener","extractBirthDetails","details","nameMatch","match","trim","dobMatch","day","month","year","padStart","tobMatch","hour","minute","period","parseInt","toLowerCase","toString","placeMatch","isProfileComplete","generateKundli","response","success","chart_data","successMessage","length","prev","Error","error","console","errorMessage","handleSendMessage","newMessage","currentInput","typingMessage","isTyping","extractedDetails","updatedProfile","missingDetails","push","sendChatMessage","withoutTyping","filter","msg","panditResponse","errorResponse","handleKeyPress","e","key","className","children","src","require","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","message","type","value","onChange","target","onKeyPress","placeholder","onClick","viewBox","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","_c","$RefreshReg$"],"sources":["D:/Downloads/astro-main/frontend/src/components/ExpandableChat.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './ExpandableChat.css';\nimport astroBotAPI from '../services/api';\n\nconst ExpandableChat = ({ isOpen, onClose, onRefresh }) => {\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n      sender: 'pandit',\n      timestamp: new Date().toLocaleTimeString()\n    },\n    {\n      id: 2,\n      text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n      sender: 'pandit',\n      timestamp: new Date().toLocaleTimeString()\n    }\n  ]);\n  const [inputText, setInputText] = useState('');\n  const [userProfile, setUserProfile] = useState({\n    name: '',\n    dob: '',\n    tob: '',\n    place: '',\n    timezone: 'Asia/Kolkata'\n  });\n  const [kundliData, setKundliData] = useState(null);\n  const [isGeneratingKundli, setIsGeneratingKundli] = useState(false);\n  const [currentStep, setCurrentStep] = useState('greeting'); // greeting, collecting_details, kundli_generated, chatting\n\n  // Handle refresh - clear messages and reset to initial state\n  React.useEffect(() => {\n    if (onRefresh) {\n      const resetMessages = () => {\n        setMessages([\n          {\n            id: 1,\n            text: \"Namaste! 🙏 Main Pandit ji hun, ek anubhavi astrologer. Aapka swagat hai AstroRemedis mein!\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          },\n          {\n            id: 2,\n            text: \"Aapka naam kya hai aur aapki janm tithi, samay aur sthan batayiye taaki main aapka Kundli banakar detailed analysis kar sakun.\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          }\n        ]);\n        setInputText('');\n        setUserProfile({\n          name: '',\n          dob: '',\n          tob: '',\n          place: '',\n          timezone: 'Asia/Kolkata'\n        });\n        setKundliData(null);\n        setCurrentStep('greeting');\n      };\n      \n      // Listen for refresh events\n      const handleRefresh = () => {\n        resetMessages();\n      };\n      \n      // Store the handler so we can clean it up\n      window.addEventListener('refreshChat', handleRefresh);\n      \n      return () => {\n        window.removeEventListener('refreshChat', handleRefresh);\n      };\n    }\n  }, [onRefresh]);\n\n  // Helper function to extract birth details from user input\n  const extractBirthDetails = (text) => {\n    const details = {};\n    \n    // Extract name (if not already set)\n    if (!userProfile.name) {\n      const nameMatch = text.match(/(?:m[ae]ra naam|my name is|i am|main|mera naam)\\s+([a-zA-Z\\s]+)/i);\n      if (nameMatch) {\n        details.name = nameMatch[1].trim();\n      }\n    }\n    \n    // Extract date of birth\n    const dobMatch = text.match(/(\\d{1,2})[\\/\\-](\\d{1,2})[\\/\\-](\\d{4})/);\n    if (dobMatch) {\n      const [, day, month, year] = dobMatch;\n      details.dob = `${year}-${month.padStart(2, '0')}-${day.padStart(2, '0')}`;\n    }\n    \n    // Extract time of birth\n    const tobMatch = text.match(/(\\d{1,2}):(\\d{2})(?:\\s*(am|pm))?/i);\n    if (tobMatch) {\n      let [, hour, minute, period] = tobMatch;\n      hour = parseInt(hour);\n      if (period && period.toLowerCase() === 'pm' && hour !== 12) {\n        hour += 12;\n      } else if (period && period.toLowerCase() === 'am' && hour === 12) {\n        hour = 0;\n      }\n      details.tob = `${hour.toString().padStart(2, '0')}:${minute}:00`;\n    }\n    \n    // Extract place\n    const placeMatch = text.match(/(?:place|sthan|city|town|birth place|janm sthan)\\s*:?\\s*([a-zA-Z\\s,]+)/i);\n    if (placeMatch) {\n      details.place = placeMatch[1].trim();\n    }\n    \n    return details;\n  };\n\n  // Helper function to check if all birth details are collected\n  const isProfileComplete = () => {\n    return userProfile.name && userProfile.dob && userProfile.tob && userProfile.place;\n  };\n\n  // Helper function to generate Kundli\n  const generateKundli = async () => {\n    setIsGeneratingKundli(true);\n    \n    try {\n      const response = await astroBotAPI.generateKundli({\n        name: userProfile.name,\n        dob: userProfile.dob,\n        tob: userProfile.tob,\n        place: userProfile.place,\n        timezone: userProfile.timezone\n      });\n      \n      if (response.success) {\n        setKundliData(response.chart_data);\n        setCurrentStep('kundli_generated');\n        \n        // Add Kundli generation success message\n        const successMessage = {\n          id: messages.length + 2,\n          text: `🎉 ${userProfile.name} ji, aapka Kundli successfully generate ho gaya hai! Main ab aapke liye detailed analysis kar sakta hun. Aap kya jaanna chahte hain?`,\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString()\n        };\n        setMessages(prev => [...prev, successMessage]);\n      } else {\n        throw new Error(response.error || 'Kundli generation failed');\n      }\n    } catch (error) {\n      console.error('Error generating Kundli:', error);\n      const errorMessage = {\n        id: messages.length + 2,\n        text: \"Sorry, Kundli generate karne mein koi problem aa rahi hai. Kripya dobara try karein ya contact karein.\",\n        sender: 'pandit',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsGeneratingKundli(false);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (inputText.trim()) {\n      const newMessage = {\n        id: messages.length + 1,\n        text: inputText,\n        sender: 'user',\n        timestamp: new Date().toLocaleTimeString()\n      };\n      \n      setMessages([...messages, newMessage]);\n      const currentInput = inputText;\n      setInputText('');\n      \n      try {\n        // Show typing indicator\n        const typingMessage = {\n          id: messages.length + 2,\n          text: \"Pandit ji typing...\",\n          sender: 'pandit',\n          timestamp: new Date().toLocaleTimeString(),\n          isTyping: true\n        };\n        setMessages(prev => [...prev, typingMessage]);\n        \n        // Extract birth details from user input\n        const extractedDetails = extractBirthDetails(currentInput);\n        const updatedProfile = { ...userProfile, ...extractedDetails };\n        setUserProfile(updatedProfile);\n        \n        let response;\n        \n        if (currentStep === 'greeting' || currentStep === 'collecting_details') {\n          // Check if we have all required details\n          if (isProfileComplete()) {\n            // Generate Kundli\n            await generateKundli();\n            return; // generateKundli handles the response\n          } else {\n            // Ask for missing details\n            const missingDetails = [];\n            if (!updatedProfile.name) missingDetails.push('naam');\n            if (!updatedProfile.dob) missingDetails.push('janm tithi (DD/MM/YYYY)');\n            if (!updatedProfile.tob) missingDetails.push('janm samay (HH:MM)');\n            if (!updatedProfile.place) missingDetails.push('janm sthan');\n            \n            response = {\n              response: `Aapka naam ${updatedProfile.name || 'batayiye'}, janm tithi ${updatedProfile.dob || 'batayiye'}, janm samay ${updatedProfile.tob || 'batayiye'}, aur janm sthan ${updatedProfile.place || 'batayiye'}. In sab details ke saath main aapka Kundli banakar detailed analysis kar sakta hun.`\n            };\n            setCurrentStep('collecting_details');\n          }\n        } else {\n          // Regular chat with Kundli context\n          response = await astroBotAPI.sendChatMessage(currentInput, kundliData);\n        }\n        \n        // Remove typing indicator and add actual response\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const panditResponse = {\n            id: messages.length + 2,\n            text: response.response,\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, panditResponse];\n        });\n        \n      } catch (error) {\n        console.error('Error sending message:', error);\n        \n        // Remove typing indicator and show error\n        setMessages(prev => {\n          const withoutTyping = prev.filter(msg => !msg.isTyping);\n          const errorResponse = {\n            id: messages.length + 2,\n            text: \"Sorry, main abhi online nahi hun. Kripya thoda baad try karein.\",\n            sender: 'pandit',\n            timestamp: new Date().toLocaleTimeString()\n          };\n          return [...withoutTyping, errorResponse];\n        });\n      }\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleSendMessage();\n    }\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className={`expandable-chat-container ${isOpen ? 'expanded' : ''}`}>\n      {/* Chat Header */}\n      <div className=\"chat-header\">\n        <div className=\"pandit-info\">\n          <div className=\"pandit-avatar-small\">\n            <img src={require('../assets/Astro_Avatar.png')} alt=\"Pandit ji\" />\n          </div>\n          <div className=\"pandit-details\">\n            <h3>Pandit ji</h3>\n            <span className=\"status\">Online</span>\n          </div>\n        </div>\n      </div>\n\n      {/* Messages Area */}\n      <div className=\"messages-container\">\n        {messages.map((message) => (\n          <div key={message.id} className={`message ${message.sender}`}>\n            {message.sender === 'pandit' && (\n              <div className=\"message-avatar\">\n                <img src={require('../assets/Astro_Avatar.png')} alt=\"Pandit ji\" />\n              </div>\n            )}\n            <div className=\"message-content\">\n              <div className=\"message-bubble\">\n                <p>{message.text}</p>\n                <span className=\"message-time\">{message.timestamp}</span>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Input Area */}\n      <div className=\"input-container\">\n        <div className=\"input-wrapper\">\n          <input\n            type=\"text\"\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Apna sawal yahan likhein...\"\n            className=\"message-input\"\n          />\n          <button onClick={handleSendMessage} className=\"send-button\">\n            <svg viewBox=\"0 0 24 24\" className=\"send-icon\">\n              <path d=\"M22 2L11 13\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n              <path d=\"M22 2L15 22L11 13L2 9L22 2Z\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpandableChat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}